import random
import typing

# import numpy as np
# import matplotlib.pyplot as plt
import discord
import requests
from discord.ext import commands
# import perlin_noise
from discord import Option
from random import *

import publicCoreData
from publicCoreData import conn, cursor, db


class ServerCore(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(name="–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-–∫–∞–Ω–∞–ª–æ–≤", description="description")
    @commands.has_permissions(administrator=True)
    async def settings_channels(self, ctx, field: Option(str, description="–ü–æ–ª–µ",
                                                         choices=["–∏–≥—Ä–∞ –ê–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å", "–û–±—ä—è–≤–ª–µ–Ω–∏—è", "—Ä–µ–∫–ª–∞–º–∞"],
                                                         required=True) = "",
                                channel: Option(typing.Union[discord.TextChannel, discord.Thread], description="–ö–∞–Ω–∞–ª.",
                                                required=True) = None, clear_field : Option(bool, description="–û—á–∏—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É? –£–¥–∞–ª–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.", required=False)=False):

        publicCoreData.findServerInDB(ctx)

        if field == "–∏–≥—Ä–∞ –ê–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å":
            if clear_field:
                none = "none"
                db.servers.update_one({"serverid": ctx.guild.id}, {
                    "$set": {"apocalypseChannel": 0, "apocalypseChannelHook": none, "isAPchannelThread": False}})
                await ctx.respond("–ö–∞–Ω–∞–ª –æ—Ç—á–∏—â–µ–Ω!")
            else:
                isThread = True if isinstance(channel, discord.Thread) else False
                parent = channel
                if isinstance(channel, discord.Thread):
                    parent = channel.parent
                avatar_url = publicCoreData.webhook_avatar_url
                webhook_name = str("RTBot's webhook")
                channel = ctx.channel
                webhooks = await parent.webhooks()
                webhook = discord.utils.get(webhooks, name=webhook_name)

                if webhook is None:
                    avatar_bytes = requests.get(avatar_url).content
                    webhook = await parent.create_webhook(name=str(webhook_name), avatar=avatar_bytes)
                db.servers.update_one({"serverid": ctx.guild.id}, {
                    "$set": {"apocalypseChannel": channel.id, "apocalypseChannelHook": webhook.url,
                             "isAPchannelThread": isThread, "parentID": parent.id}})
                await ctx.respond("–ö–∞–Ω–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

    @commands.slash_command(name="–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-—Å–µ—Ä–≤–µ—Ä–∞", description="description")
    @commands.has_permissions(administrator=True)

    async def server_settings(self, ctx,
                              field: Option(str, description="–ü–æ–ª–µ", choices=["—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä","–∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è"], required=True) = "0",
                              value: Option(bool, description="–ó–Ω–∞—á–µ–Ω–∏–µ", required=True) = False):
        if field == "—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä":
            if value:
                result = db.servers.find_one({"serverid": ctx.guild.id}, {"invitelink": 1})
                if not result["invitelink"]:
                    invite = await ctx.channel.create_invite(max_age=0)
                    db.servers.update_one({"serverid": ctx.guild.id}, {"$set": {"invitelink": str(invite)}})
                    await ctx.respond(f"–ü–æ–ª–µ **{field}** —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {str(invite)}")
                else:
                    await ctx.respond(
                        f"–ù–∞ —Å–µ—Ä–≤–µ—Ä —É–∂–µ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ **{result['invitelink']}**. –ï—Å–ª–∏ –æ–Ω–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –Ω–æ —Å False, –∞ –∑–∞—Ç–µ–º —Å–Ω–æ–≤–∞ —Å True")
            else:
                db.servers.update_one({"serverid": ctx.guild.id}, {"$set": {"invitelink": ""}})
                await ctx.respond(f"–ü–æ–ª–µ **{field}** –æ—Ç—á–∏—â–µ–Ω–æ.")

        # if field == "–∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è":
        #     if value:
        #
        #
        #         await ctx.respond(f"–ü–æ–ª–µ **{field}** —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {value}")
    @commands.slash_command(name="–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-—Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö-—Å—Ç—Ä–æ–∫",description="description")
    @commands.has_permissions(administrator=True)
    async def server_settings_str(self, ctx, field : Option(str, description="–ü–æ–ª–µ",choices=["—Ç–µ–∫—Å—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∫–∏"], required=True)="", value : Option(str, description="–ó–Ω–∞—á–µ–Ω–∏–µ", required=True)=" "):
        if field == "—Ç–µ–∫—Å—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∫–∏":
            db.servers.update_one({"serverid": ctx.guild.id}, {"$set": {"text": value}})
            srv = db.servers.find_one({"serverid":ctx.guild.id}, {"bumpcolor":1,"invitelink":1})
            clr =srv["bumpcolor"]
            lnk = srv["invitelink"]
            embed = discord.Embed(title=f"{ctx.guild.name}",description=f"{value}",colour= publicCoreData.embedColors["Neutral"] if clr is None else int(clr))
            embed.add_field(name="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä",value=f"üîó{lnk}",inline=False)
            await ctx.respond("–¢–µ–∫—Å—Ç –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–º–µ–Ω—ë–Ω –Ω–∞:", embed=embed)

